{"version":3,"sources":["webpack://Darkmode/webpack/universalModuleDefinition","webpack://Darkmode/webpack/bootstrap","webpack://Darkmode/./node_modules/color-convert/conversions.js","webpack://Darkmode/./node_modules/color-convert/index.js","webpack://Darkmode/./node_modules/color-convert/node_modules/color-name/index.js","webpack://Darkmode/./node_modules/color-convert/route.js","webpack://Darkmode/./node_modules/color-name/index.js","webpack://Darkmode/./node_modules/color-string/index.js","webpack://Darkmode/./node_modules/color/index.js","webpack://Darkmode/./node_modules/is-arrayish/index.js","webpack://Darkmode/./node_modules/simple-swizzle/index.js","webpack://Darkmode/./src/darkmode.js"],"names":["ColorName","windowtext","colorNameReg","RegExp","Object","keys","join","MEDIA_QUERY","TEXTCOLOR","RANDOM","Date","Math","round","random","COLORATTR","BGCOLORATTR","ORIGINAL_COLORATTR","ORIGINAL_BGCOLORATTR","BGIMAGEATTR","DEFAULT_DARK_BGCOLOR","DEFAULT_LIGHT_BGCOLOR","DEFAULT_DARK_BGCOLOR_BRIGHTNESS","LIMIT_LOW_BGCOLOR_BRIGHTNESS","CLASS_PREFIX","CLASS_REG","PAGE_HEIGHT","window","innerHeight","document","documentElement","clientHeight","TABLE_NAME","UA","navigator","userAgent","isPC","test","mql","CLASSNAME_INDEX","allNodes","firstPageNodes","delayNodes","cssAll","needJudgeFirstPage","delayBgJudge","genCssKV","key","val","genCss","className","cssKV","getChildrenAndIt","dom","concat","querySelectorAll","hasTextNode","cnt","childNodes","forEach","node","nodeType","nodeValue","replace","length","writeStyle","css","head","insertAdjacentHTML","textClassPrefix","textList","textIdx","push","el","classList","add","callback","idxStack","item","idx","unshift","splice","shift","pushTextList","forEachTextList","posStack","posClassPrefix","posIdx","rect","getBoundingClientRect","i","bgRect","top","bottom","left","right","pushPosStack","inPosStack","adjustBrightness","color","options","hsl","array","alpha","whiteColorBrightness","limitBright","limitLowTextBright","LimitOffsetBrightness","rgb","perceivedBrightness","newColor","extStyle","isBgColor","getAttribute","removeAttribute","Color","min","ratio","hasInlineColor","parentTextColor","parentBgColorStr","ret","isTextColor","parentElementBgColorStr","isBorderColor","parentElementBgColor","parentElementBgColorRgb","parentElementBgColorHSL","parentElementBgColorAlpha","parentElementBGPerceivedBrightness","parentElementBGWithOpacityPerceivedBrightness","adjustTextBrightnessByLimitBrightness","rgbArray","limitLowBright","relativeBrightnessRatio","newTextR","newTextG","newTextB","offsetPerceivedBrightness","abs","tmpRgb","tmpPerceivedBrightness","convert","nodeName","toLowerCase","styles","style","isTable","indexOf","hasInlineBackground","hasInlineBackgroundImage","elBackgroundPositionAttr","elBackgroundSizeAttr","cssKVList","cssText","split","map","cssStr","splitIdx","slice","filter","value","sort","key1","key2","toString","oldValue","cssChange","importantReg","match","colorReg","isGradient","mixColor","colors","retColor","nextColor","pop","mix","gradientColors","gradientMixColor","attrName","originalAttrName","retColorStr","setAttribute","SVGElement","isBackgroundAttr","isBorderImageAttr","imgBgColor","imgBgCover","matches","newValue","newBackgroundPositionValue","newBackgroundSizeValue","tmpCssKvStr","textColor","e","console","error","switchToDarkmode","mqlObj","firstPageNode","visibility","run","nodes","opt","undefined","matchMedia","addListener"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA,kBAAkB,mBAAO,CAAC,iFAAY;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,QAAQ,4BAA4B;AACpC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,6BAA6B;AACpC,WAAW,iCAAiC;AAC5C,UAAU,gCAAgC;AAC1C,WAAW,iCAAiC;AAC5C,OAAO,qCAAqC;AAC5C,SAAS,2CAA2C;AACpD,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,mDAAmD,cAAc;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO,QAAQ;AAC/B,gBAAgB,OAAO,QAAQ;AAC/B,iBAAiB,OAAO,OAAO;AAC/B,iBAAiB,OAAO,OAAO;AAC/B,gBAAgB,QAAQ,OAAO;AAC/B,gBAAgB,QAAQ,OAAO;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sEAAsE;;AAEtE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,EAAE,UAAU,EAAE;AAC7D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa;AAC5B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACn2BA,kBAAkB,mBAAO,CAAC,kEAAe;AACzC,YAAY,mBAAO,CAAC,sDAAS;;AAE7B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wDAAwD,uCAAuC;AAC/F,sDAAsD,qCAAqC;;AAE3F;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF,CAAC;;AAED;;;;;;;;;;;;;AC7EY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvJA,kBAAkB,mBAAO,CAAC,kEAAe;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC/FY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvJA;AACA,iBAAiB,mBAAO,CAAC,sDAAY;AACrC,cAAc,mBAAO,CAAC,8DAAgB;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,IAAI;AAC7B,wBAAwB,EAAE,WAAW,EAAE;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;AACF;AACA;;AAEA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACzOa;;AAEb,kBAAkB,mBAAO,CAAC,0DAAc;AACxC,cAAc,mBAAO,CAAC,4DAAe;;AAErC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA,qEAAqE,kCAAkC,EAAE;;AAEzG;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,YAAY;AAC5B;AACA;AAC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","file":"darkmode.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Darkmode\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Darkmode\"] = factory();\n\telse\n\t\troot[\"Darkmode\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/darkmode.js\");\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","/**\n * Dark Mode 暗黑模式\n * @jaminqian\n *\n *\n */\n\n// dependencies\nimport Color from 'color';\nimport ColorName from 'color-name';\nColorName.windowtext = [0, 0, 0]; // 补上这个colorName\n\nconst colorNameReg = new RegExp(Object.keys(ColorName).join('|'), 'ig');\nconst MEDIA_QUERY = '(prefers-color-scheme: dark)'; // Dark Mode的CSS媒体查询\nconst TEXTCOLOR = 'rgba(0,0,0,0.9)'; // 非Dark Mode下字体颜色\nconst RANDOM = `${new Date() * 1}${Math.round(Math.random() * 10)}`; // 生成个随机数，格式为时间戳+随机数\nconst COLORATTR = `data-darkmode-color-${RANDOM}`;\nconst BGCOLORATTR = `data-darkmode-bgcolor-${RANDOM}`;\nconst ORIGINAL_COLORATTR = `data-darkmode-original-color-${RANDOM}`;\nconst ORIGINAL_BGCOLORATTR = `data-darkmode-original-bgcolor-${RANDOM}`;\nconst BGIMAGEATTR = `data-darkmode-bgimage-${RANDOM}`;\nconst DEFAULT_DARK_BGCOLOR = '#232323';\nconst DEFAULT_LIGHT_BGCOLOR = '#fff';\nconst DEFAULT_DARK_BGCOLOR_BRIGHTNESS = 35;\nconst LIMIT_LOW_BGCOLOR_BRIGHTNESS = 60;\nconst CLASS_PREFIX = 'js_darkmode__';\nconst CLASS_REG = new RegExp(`${CLASS_PREFIX}[^ ]+`, 'g');\nconst PAGE_HEIGHT = window.innerHeight || document.documentElement.clientHeight;\nconst TABLE_NAME = ['table', 'tr', 'td', 'th']; // 支持bgcolor属性的table标签列表\nconst UA = navigator.userAgent;\nconst isPC = (/windows\\snt/i.test(UA) && !/Windows\\sPhone/i.test(UA)) || (/mac\\sos/i.test(UA) && !/(iPhone|iPad|iPod|iOS)/i.test(UA));\n\nlet mql = null;\nlet CLASSNAME_INDEX = 0; // class索引\nlet allNodes = []; // 要处理的节点列表\nlet firstPageNodes = []; // 首屏节点列表\nlet delayNodes = []; // 延迟处理的节点列表\nlet cssAll = ['', '']; // Dark Mode样式表，[首屏样式表, 非首屏样式表]\nlet needJudgeFirstPage = true; // 需要判断首屏\nlet delayBgJudge = false; // 是否延迟背景判断\n\n// 生成css键值对\nconst genCssKV = (key, val) => `${key}: ${val} !important;`;\n\n// 生成css\nconst genCss = (className, cssKV) => `.${className}{${cssKV}}`;\n\n// 获取某个节点及它的所有子节点\nconst getChildrenAndIt = dom => [dom].concat(...dom.querySelectorAll('*'));\n\n// 判断某个节点里是否包含文字节点\nconst hasTextNode = dom => {\n  let cnt = '';\n  dom.childNodes.forEach(node => {\n    if (node.nodeType === 3) {\n      cnt += node.nodeValue.replace(/\\s/g, ''); // 不考虑空白字符\n    }\n  });\n  return cnt.length > 0;\n};\n\n// 写入样式表\nconst writeStyle = css => css && document.head.insertAdjacentHTML('beforeend', `<style type=\"text/css\">@media ${MEDIA_QUERY} {${css}}</style>`);\n\n// 文字对象列表相关API\nconst {\n  push: pushTextList, // 入队\n  forEach: forEachTextList // 遍历队列\n} = (() => {\n  const textClassPrefix = `${CLASS_PREFIX}text__`;\n  let textList = []; // 文字对象列表，{ el, className }\n  let textIdx = 0;\n\n  return {\n    push(el) {\n      const className = `${textClassPrefix}${textIdx++}`;\n      el.classList.add(className);\n      textList.push({\n        el,\n        className\n      });\n    },\n    forEach(callback) {\n      const idxStack = [];\n\n      textList.forEach((item, idx) => {\n        idxStack.unshift(idx);\n        typeof callback && callback(item.el);\n      });\n\n      while (idxStack.length) { // 处理完之后删除部分节点\n        textList.splice(idxStack.shift(), 1);\n      }\n    }\n  };\n})();\n\n// 需要判断位置的对象堆栈相关API\nconst {\n  push: pushPosStack, // 入栈\n  in: inPosStack // 是否栈内\n} = (() => {\n  const posStack = []; // 需要判断位置的对象堆栈，{ el, className, cssKV, rect }\n  const posClassPrefix = `${CLASS_PREFIX}pos__`;\n  let posIdx = 0;\n\n  return {\n    push(el, cssKV) {\n      const className = `${posClassPrefix}${posIdx++}`;\n      el.classList.add(className);\n      posStack.unshift({\n        el,\n        className,\n        cssKV\n      });\n    },\n    in (el, callback) {\n      const rect = el.getBoundingClientRect();\n      const idxStack = [];\n\n      posStack.forEach((item, i) => {\n        if (!item.rect) item.rect = item.el.getBoundingClientRect();\n\n        const bgRect = item.rect;\n        if (!(rect.top >= bgRect.bottom || rect.bottom <= bgRect.top || rect.left >= bgRect.right || rect.right <= bgRect.left)) { // 表示结点在背景图内\n          idxStack.unshift(i);\n        }\n      });\n\n      while (idxStack.length) {\n        const item = posStack.splice(idxStack.shift(), 1)[0];\n        typeof callback === 'function' && callback(item);\n      }\n    }\n  };\n})();\n\n// 调整明度\nconst adjustBrightness = (color, el, options) => {\n  // 背景：\n  // 处理原则：白背景改黑，其他高感知亮度背景调暗，低亮度适当提高亮度（感知亮度：https://www.w3.org/TR/AERT/#color-contrast）\n  // 处理方法：黑白灰色（h=0，s=0）亮度大于40%时，做取反处理（darkmode默认底色亮度为14%）；感知亮度大于190，取190；其他亮度小于26%时，设为26%。\n  // 遗留问题：高亮度背景高亮度字体有些case有问题（使用感知亮度算法解决大部分case）\n\n  // 字体、边框：\n  // 处理原则：高亮度字体压字体亮度(白色除外)，低亮度字体调亮（补充优化：带背景图片子元素字体颜色不变，带高感知亮度背景颜色子元素字体颜色不变），带背景图片字体补底色\n  // 处理方法：亮度小于40%时，用（90%-该亮度），大于等于40%则保持不变；\n\n  // 阴影\n  // 处理原则：不转换\n\n  // 原则：\n  // - 用户设置为高亮字体颜色（接近白色亮度），不处理，保持高亮\n  // - 用户设置的其他字体颜色，无背景颜色，低于感知亮度阈值提高感知亮度\n  // - 用户设置的其他字体颜色，有背景颜色，根据调整后的背景颜色算出具有一定亮度差的字体颜色\n  // - 用户设置了背景图片的字体颜色，暂不处理，不知道背景图片是量还是暗？？\n\n  const hsl = color.hsl().array();\n  const alpha = color.alpha();\n  const whiteColorBrightness = 250;\n  const limitBright = 190;\n  const limitLowTextBright = 75;\n  const LimitOffsetBrightness = 60;\n  let rgb = color.rgb().array();\n  let perceivedBrightness = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000; // 计算感知亮度\n  let newColor;\n  let extStyle = '';\n\n  if (options.isBgColor) { // 背景色\n    // 如果设置背景颜色，取消背景图片的影响\n    if (el.getAttribute(BGIMAGEATTR) && alpha >= 0.05) {\n      el.removeAttribute(BGIMAGEATTR);\n    }\n\n    if ((hsl[1] === 0 && hsl[2] > 40) || perceivedBrightness > whiteColorBrightness) {\n      // 饱和度为0（黑白灰色），亮度大于40%或感知亮度大于250（白色）时，做亮度取反处理（Dark Mode 默认底色亮度为14%）\n      newColor = Color.hsl(0, 0, Math.min(100, 100 + 14 - hsl[2]));\n      // console.info('[背景] 白改黑，感知亮度%d：%c  测试  %c  测试  ', perceivedBrightness, `color:#fff;background:rgb(${rgb});`, `color:#fff;background:hsl(${hsl[0]},${hsl[1]}%,${hsl[2]}%)`);\n    } else if (perceivedBrightness > limitBright) {\n      // 感知亮度大于limitBright，将感知亮度设为limitBright\n      const ratio = (limitBright * 1000) / (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114);\n      newColor = Color.rgb(rgb[0] * ratio, rgb[1] * ratio, rgb[2] * ratio);\n      // console.info('[背景] 调暗，感知亮度%d：%c  测试  %c  测试  ', perceivedBrightness, `color:#fff;background:rgb(${rgb});`, `color:#fff;background:rgb(${rgb[0] * ratio},${rgb[1] * ratio},${rgb[2] * ratio})`);\n    } else if (hsl[2] < 26) {\n      // 亮度小于26%，将亮度设为26%，适当提高亮度\n      hsl[2] = 26;\n      newColor = Color.hsl(...hsl);\n      // console.info('[背景] 调亮，感知亮度%d：%c  测试  %c  测试  ', perceivedBrightness, `color:#fff;background:rgb(${rgb});`, `color:#fff;background:hsl(${hsl[0]},${hsl[1]}%,${hsl[2]}%)`);\n    }\n\n    if (!options.hasInlineColor) {\n      const parentTextColor = el.getAttribute(COLORATTR) || TEXTCOLOR;\n      const parentBgColorStr = newColor || color;\n      // el.setAttribute(BGCOLORATTR, newColor || color)\n      const ret = adjustBrightness(Color(parentTextColor), el, {\n        isTextColor: true,\n        parentElementBgColorStr: parentBgColorStr\n      });\n      if (ret.newColor) {\n        extStyle += genCssKV('color', ret.newColor);\n      } else {\n        extStyle += genCssKV('color', parentTextColor);\n      }\n    }\n  } else if (options.isTextColor || options.isBorderColor) { // 字体色、边框色\n    const parentElementBgColorStr = options.parentElementBgColorStr || el.getAttribute(BGCOLORATTR) || DEFAULT_DARK_BGCOLOR;\n    const parentElementBgColor = Color(parentElementBgColorStr);\n    const parentElementBgColorRgb = parentElementBgColor.rgb().array();\n    const parentElementBgColorHSL = parentElementBgColor.hsl().array();\n    const parentElementBgColorAlpha = parentElementBgColor.alpha();\n    const parentElementBGPerceivedBrightness = (parentElementBgColorRgb[0] * 299 + parentElementBgColorRgb[1] * 587 + parentElementBgColorRgb[2] * 114) / 1000;\n    const parentElementBGWithOpacityPerceivedBrightness = parentElementBGPerceivedBrightness * parentElementBgColorAlpha + DEFAULT_DARK_BGCOLOR_BRIGHTNESS * (1 - parentElementBgColorAlpha);\n    const adjustTextBrightnessByLimitBrightness = (rgbArray, limitLowBright) => {\n      if (rgbArray[0] === 0 && rgbArray[1] === 0 && rgbArray[2] === 0) return Color.rgb(...rgbArray);\n      const relativeBrightnessRatio = (limitLowBright * 1000) / (rgbArray[0] * 299 + rgbArray[1] * 587 + rgbArray[2] * 114);\n      let newTextR = Math.min(255, rgbArray[0] * relativeBrightnessRatio);\n      let newTextG = Math.min(255, rgbArray[1] * relativeBrightnessRatio);\n      let newTextB = Math.min(255, rgbArray[2] * relativeBrightnessRatio);\n\n      if (newTextG === 0) {\n        newTextG = (limitLowBright * 1000 - newTextR * 299 - newTextB * 114) / 587;\n      } else if (newTextR === 0) {\n        newTextR = (limitLowBright * 1000 - newTextG * 587 - newTextB * 114) / 299;\n      } else if (newTextB === 0) {\n        newTextB = (limitLowBright * 1000 - newTextR * 299 - newTextG * 587) / 114;\n      } else if (newTextR === 255 || newTextB === 255) {\n        newTextG = (limitLowBright * 1000 - newTextR * 299 - newTextB * 114) / 587;\n      } else if (newTextG === 255) {\n        newTextB = (limitLowBright * 1000 - newTextR * 299 - newTextG * 587) / 114;\n      }\n      return Color.rgb(newTextR, newTextG, newTextB);\n    };\n\n    // 无背景图片\n    if (!el.getAttribute(BGIMAGEATTR)) {\n      // 用户设置为高亮字体颜色（接近白色亮度），不处理，保持高亮\n      if (perceivedBrightness >= whiteColorBrightness) {\n        // el.style.outline = '1px solid yellow';\n      } else if (parentElementBGWithOpacityPerceivedBrightness <= LIMIT_LOW_BGCOLOR_BRIGHTNESS && perceivedBrightness < limitLowTextBright) {\n        // 用户设置的其他字体颜色，无背景颜色或有低于阈值的背景颜色，低于感知亮度阈值的字体颜色提高感知亮度\n        if (hsl[2] <= 40) {\n          hsl[2] = 90 - hsl[2];\n          rgb = Color.hsl(...hsl).rgb().array();\n          perceivedBrightness = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n        }\n\n        if (perceivedBrightness >= limitLowTextBright) {\n          // el.style.outline = '1px solid red';\n          newColor = Color.hsl(...hsl);\n        } else {\n          newColor = adjustTextBrightnessByLimitBrightness(rgb, limitLowTextBright);\n        }\n      } else {\n        // 用户设置的其他字体颜色，有高于阈值感知亮度背景颜色，根据调整后的背景颜色算出具有一定亮度差的字体颜色\n        const offsetPerceivedBrightness = Math.abs(parentElementBGWithOpacityPerceivedBrightness - perceivedBrightness);\n        if (offsetPerceivedBrightness < LimitOffsetBrightness) {\n          if (parentElementBGWithOpacityPerceivedBrightness > 100) {\n            hsl[2] = 90 - hsl[2];\n            let tmpRgb = Color.hsl(...hsl).rgb().array();\n            let tmpPerceivedBrightness = (tmpRgb[0] * 299 + tmpRgb[1] * 587 + tmpRgb[2] * 114) / 1000;\n            // 先以最小改动来修复这里的问题，后面再整理代码\n            if (parentElementBGWithOpacityPerceivedBrightness - tmpPerceivedBrightness < LimitOffsetBrightness) {\n              // console.log(Math.abs(parentElementBGWithOpacityPerceivedBrightness - tmpPerceivedBrightness), el);\n              newColor = adjustTextBrightnessByLimitBrightness(tmpRgb, parentElementBGWithOpacityPerceivedBrightness - LimitOffsetBrightness);\n            } else {\n              newColor = Color.hsl(...hsl);\n            }\n          } else {\n            hsl[2] = parentElementBgColorHSL[2] + 40;\n            newColor = Color.hsl(...hsl);\n          }\n          // el.style.outline = '1px solid yellow';\n          // newColor = Color.hsl(...hsl);\n        }\n      }\n    }\n  }\n  return {\n    newColor: newColor && newColor.alpha(alpha).rgb(),\n    extStyle\n  };\n};\n\n// 转化单个节点\nconst convert = el => {\n  const nodeName = el.nodeName.toLowerCase();\n\n  const styles = el.style;\n  let cssKV = ''; // css键值对\n  let css = ''; // css\n\n  try {\n    const isTable = TABLE_NAME.indexOf(nodeName) > -1;\n    let hasInlineColor = false; // 是否有自定义字体颜色\n    let hasInlineBackground = false;\n    let hasInlineBackgroundImage = false;\n    let elBackgroundPositionAttr;\n    let elBackgroundSizeAttr;\n\n    // styles.cssText 读出来的颜色统一是rgba格式，除了用英文定义颜色（如：black、white）\n    const cssKVList = (styles.cssText && styles.cssText.split(';') || []).map(cssStr => { // 将cssStr转换为[key, value]，并清除各个元素的前后空白字符\n      const splitIdx = cssStr.indexOf(':');\n      return [cssStr.slice(0, splitIdx).toLowerCase(), cssStr.slice(splitIdx + 1)].map(item => (item || '').replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, ''));\n    }).filter(([key, value]) => { // 过滤掉一些key\n      if (key === 'color') {\n        hasInlineColor = true;\n      } else if (/background/i.test(key)) {\n        hasInlineBackground = true;\n        if (key === 'background-position') {\n          elBackgroundPositionAttr = value;\n        } else if (key === 'background-size') {\n          elBackgroundSizeAttr = value;\n        }\n      }\n      if ((/background/i.test(key) || /^(-webkit-)?border-image/.test(key)) && /url\\([^\\)]*\\)/i.test(value)) {\n        hasInlineBackgroundImage = true;\n      }\n      return ['-webkit-border-image', 'border-image', 'color', 'background-color', 'background-image', 'background', 'border', 'border-top', 'border-right', 'border-bottom', 'border-left', 'border-color', 'border-top-color', 'border-right-color', 'border-bottom-color', 'border-left-color'].indexOf(key) > -1;\n    }).sort(([key1], [key2]) => { // color属性放在最后\n      if (key1 === 'color') {\n        return 1;\n      } else if (key1 === 'background-image' && key2 === 'background-color') { // 确保 background-image 在 background-color 后面\n        return 1;\n      }\n      return -1;\n    });\n\n    if (isTable && !hasInlineBackground) { // 如果table没有内联样式\n      const color = el.getAttribute('bgcolor'); // 获取bgcolor的色值\n      if (color) { // 有色值，则当做内联样式来处理\n        cssKVList.unshift(['background-color', Color(color).toString()]);\n        hasInlineBackground = true;\n      }\n    }\n\n    cssKVList.forEach(([key, value]) => {\n      const oldValue = value;\n      let cssChange = false;\n\n      // !important\n      const importantReg = / !important$/;\n\n      // 将英文定义颜色转换为rgb格式\n      value = value.replace(importantReg, '').replace(colorNameReg, match => `rgb(${ColorName[match.toLowerCase()].toString()})`);\n\n      // 找出色值来处理\n      const colorReg = /rgba?\\([^)]+\\)/ig;\n      const isBgColor = /^background/.test(key);\n      const isTextColor = key === 'color';\n      const isBorderColor = /^border/.test(key);\n      const isGradient = /gradient/.test(value);\n      const mixColor = colors => {\n        if (!colors || colors.length < 1) return '';\n        if (colors.length === 1) return colors[0];\n\n        let retColor = colors.shift();\n        let nextColor = colors.pop();\n        while (nextColor) {\n          retColor = Color(retColor).mix(Color(nextColor));\n          nextColor = colors.pop();\n        }\n\n        return retColor;\n      };\n      let extStyle = '';\n      let gradientColors = [];\n      let gradientMixColor;\n\n      if (!hasInlineBackgroundImage && colorReg.test(value)) {\n        if (isGradient) {\n          // 把原渐变色取出来\n          value.replace(colorReg, match => gradientColors.push(match));\n\n          // 计算出一个mix原色\n          gradientMixColor = mixColor([].concat(gradientColors));\n          // console.log(value, gradientColors, 'mix:', gradientMixColor) ;\n        }\n        value = value.replace(colorReg, match => {\n          // 渐变色统一改成mix纯色\n          if (isGradient) {\n            match = gradientMixColor;\n            cssChange = true;\n          }\n\n          // 使用颜色处理算法\n          const ret = adjustBrightness(Color(match), el, {\n            isBgColor,\n            isTextColor,\n            isBorderColor,\n            hasInlineColor\n          });\n          const retColor = ret.newColor;\n\n          extStyle += ret.extStyle;\n\n          // 对背景颜色和文字颜色做继承传递，用于文字亮度计算\n          if (isBgColor || isTextColor) {\n            // isSetChildren = true;\n            const attrName = isBgColor ? BGCOLORATTR : COLORATTR;\n            const originalAttrName = isBgColor ? ORIGINAL_BGCOLORATTR : ORIGINAL_COLORATTR;\n            const retColorStr = retColor ? retColor.toString() : match;\n            getChildrenAndIt(el).forEach(dom => {\n              dom.setAttribute(attrName, retColorStr);\n              dom.setAttribute(originalAttrName, match);\n\n              // 如果设置背景颜色，取消背景图片的影响\n              if (isBgColor && Color(retColorStr).alpha() >= 0.05 && dom.getAttribute(BGIMAGEATTR)) {\n                dom.removeAttribute(BGIMAGEATTR);\n              }\n            });\n          }\n\n          retColor && (cssChange = true);\n\n          return retColor || match;\n        }).replace(/\\s?!\\s?important/ig, '');\n      }\n\n      if (extStyle) {\n        cssKV += extStyle;\n      }\n\n      if (!(el instanceof SVGElement)) { // 先不处理SVG\n        // 背景图片、边框图片\n        const isBackgroundAttr = /^background/.test(key);\n        const isBorderImageAttr = /^(-webkit-)?border-image/.test(key);\n        if ((isBackgroundAttr || isBorderImageAttr) && /url\\([^\\)]*\\)/i.test(value)) {\n          cssChange = true;\n          let imgBgColor = el.getAttribute(ORIGINAL_BGCOLORATTR) || DEFAULT_LIGHT_BGCOLOR;\n          const imgBgCover = 'rgba(0,0,0,0.1)';\n\n          // 在背景图片下加一层原背景颜色：\n          // background-image使用多层背景(注意background-position也要多加一层 https://www.w3.org/TR/css-backgrounds-3/#layering)；\n          // border-image不支持多层背景，需要添加background-color\n          value = value.replace(/^(.*?)url\\(([^\\)]*)\\)(.*)$/i, (matches) => {\n            let newValue = matches;\n            let newBackgroundPositionValue = '';\n            let newBackgroundSizeValue = '';\n            let tmpCssKvStr = '';\n\n            if (el.getAttribute(BGIMAGEATTR) !== '1') { // 避免重复setAttribute\n              getChildrenAndIt(el).forEach(dom => dom.setAttribute(BGIMAGEATTR, '1'));\n            }\n\n            // background-image\n            if (isBackgroundAttr) {\n              newValue = `linear-gradient(${imgBgCover}, ${imgBgCover}),${matches}`;\n              tmpCssKvStr = genCssKV(key, `${newValue},linear-gradient(${imgBgColor}, ${imgBgColor})`);\n              if (elBackgroundPositionAttr) {\n                newBackgroundPositionValue = `top left,${elBackgroundPositionAttr}`;\n                cssKV += genCssKV('background-position', `${newBackgroundPositionValue}`);\n                tmpCssKvStr += genCssKV('background-position', `${newBackgroundPositionValue},top left`);\n              }\n              if (elBackgroundSizeAttr) {\n                newBackgroundSizeValue = `100%,${elBackgroundSizeAttr}`;\n                cssKV += genCssKV('background-size', `${newBackgroundSizeValue}`);\n                tmpCssKvStr += genCssKV('background-size', `${newBackgroundSizeValue},100%`);\n              }\n              pushPosStack(el, tmpCssKvStr); // 背景图入栈\n            } else {\n              // border-image元素，如果当前元素没有背景颜色，补背景颜色\n              !hasInlineBackground && pushPosStack(el, genCssKV('background-image', `linear-gradient(${imgBgCover}, ${imgBgCover}),linear-gradient(${imgBgColor}, ${imgBgColor})`)); // 背景图入栈\n            }\n            return newValue;\n          });\n\n          // 没有设置自定义字体颜色，则使用非 Dark Mode 下默认字体颜色\n          if (!hasInlineColor) {\n            const textColor = el.getAttribute(ORIGINAL_COLORATTR) || TEXTCOLOR;\n            cssKV += genCssKV('color', textColor);\n            getChildrenAndIt(el).forEach(dom => dom.setAttribute(COLORATTR, textColor));\n          }\n        }\n      }\n\n      if (cssChange) {\n        importantReg.test(oldValue) && (styles[key] = oldValue.replace(importantReg, '')); // 清除inline style的!important\n        if (isGradient) {\n          pushPosStack(el, genCssKV(key, value)); // 渐变入栈\n        } else {\n          cssKV += genCssKV(key, value);\n        }\n      }\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  if (cssKV) { // 有处理过或者是背景图片就加class以及css\n    isPC && el.setAttribute('data-style', styles.cssText); // PC端备份内联样式到data-style里，供编辑器做反处理\n    const className = `${CLASS_PREFIX}${CLASSNAME_INDEX++}`;\n    el.classList.add(className);\n    css += (cssKV ? genCss(className, cssKV) : '');\n  }\n\n  if (hasTextNode(el)) { // 如果节点里有文本，要判断是否在背景图里\n    if (delayBgJudge) { // 延迟背景判断\n      pushTextList(el); // 文字入队\n    } else {\n      inPosStack(el, item => {\n        css += genCss(item.className, item.cssKV);\n      });\n    }\n  }\n\n  return css;\n};\n\n// Dark Mode切换\nconst switchToDarkmode = mqlObj => {\n  if (cssAll === null) return; // 已运行过Dark Mode处理逻辑则不再运行\n\n  try {\n    if (mqlObj.matches) { // Dark Mode\n      if (!allNodes.length && delayNodes.length) { // 如果没有节点但有延迟节点，则运行延迟节点，然后再清空延迟节点\n        allNodes = delayNodes;\n        delayNodes = [];\n      }\n\n      allNodes.forEach(node => {\n        if (node.className && typeof node.className === 'string') {\n          node.className = node.className.replace(CLASS_REG, ''); // 过滤掉原有的Dark Mode class，避免外部复制文章时把文章内的Dark Mode class也复制过去导致新文章在Dark Mode下样式错乱\n        }\n\n        if (!needJudgeFirstPage) { // 不需要判断首屏\n          cssAll[1] += convert(node); // 写入非首屏样式\n        } else { // 判断首屏\n          const rect = node.getBoundingClientRect();\n          const top = rect.top;\n          const bottom = rect.bottom;\n          if (top <= 0 && bottom <= 0) { // 首屏前面\n            cssAll[1] += convert(node); // 写入非首屏样式\n          } else if ((top > 0 && top < PAGE_HEIGHT) || (bottom > 0 && bottom < PAGE_HEIGHT)) { // 首屏\n            firstPageNodes.push(node); // 记录首屏节点\n            cssAll[0] += convert(node); // 写入首屏样式\n          } else { // 首屏后面，理论上，这里最多只会进来一次\n            needJudgeFirstPage = false; // 至此，不需要再判断首屏了\n\n            // 显示首屏\n            writeStyle(cssAll[0]); // 写入首屏样式表\n            firstPageNodes.forEach(firstPageNode => {\n              firstPageNode.style.visibility = 'visible';\n            }); // 显示首屏节点\n            cssAll[0] = ''; // 写入首屏样式表后清空内存中的首屏样式\n\n            cssAll[1] += convert(node); // 写入非首屏样式\n          }\n        }\n      });\n    } else {\n      // 首次加载页面时为非Dark Mode，标记为不需要判断首屏\n      needJudgeFirstPage = false;\n\n      // 首次加载页面时为非Dark Mode，标记为不延迟判断背景\n      delayBgJudge = false;\n\n      if (allNodes.length) {\n        allNodes.forEach(node => delayNodes.push(node)); // 拼接到延迟执行的节点里\n        allNodes = []; // 拼接完就清除\n      }\n    }\n\n    cssAll[1] = cssAll[0] + cssAll[1]; // 如果页面只有一屏，就不会进入首屏后面的判断，那么首屏样式放到这里一并写入样式表\n    if (cssAll[1]) {\n      writeStyle(cssAll[1]); // 写入非首屏样式表\n      cssAll = null; // 设置好css后销毁之\n      allNodes = null; // 销毁\n      firstPageNodes = null; // 销毁\n    }\n  } catch (e) {\n    console.error(e);\n  }\n};\n\n/**\n * @param {NodeList} nodes 要处理的节点列表\n * @param {Object}   opt   配置\n * @param {Boolean}  opt.needJudgeFirstPage 是否需要判断首屏\n * @param {Boolean}  opt.delayBgJudge       是否延迟背景判断\n */\nconst run = (nodes, opt = {}) => {\n  opt.needJudgeFirstPage !== undefined && (needJudgeFirstPage = opt.needJudgeFirstPage);\n  opt.delayBgJudge !== undefined && (delayBgJudge = opt.delayBgJudge);\n\n  // 匹配媒体查询\n  mql = window.matchMedia(MEDIA_QUERY);\n  mql.addListener(switchToDarkmode); // 监听\n\n  allNodes = nodes || [];\n  switchToDarkmode(mql); // 手动执行一次\n};\n\nexport {\n  run\n};"],"sourceRoot":""}